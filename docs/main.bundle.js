(()=>{"use strict";var e={268:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.regexp=new RegExp(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/),this.email=e,this.isValid=this.checkEmail(),this.validEmail='<span class="email">\n                          <span>'+this.email+'</span>\n                          <a class="js-delete-tag" title="Remove tag">\n                            x\n                          </a>\n                        </span>',this.invalidEmail='<span class="emailInvalid">\n                            <span>'+this.email+'</span>\n                            <a class="js-delete-tag" title="Remove tag">\n                              x\n                            </a>\n                          </span>'}return e.prototype.deleteTag=function(e){var t=e.parentElement;null==t||t.remove()},e.prototype.stringToHTML=function(e){var t=this,n=(new DOMParser).parseFromString(e,"text/html");return n.getElementsByClassName("js-delete-tag")[0].addEventListener("click",(function(e){e.preventDefault(),t.deleteTag(this)})),n.body},e.prototype.checkEmail=function(){return this.regexp.test(this.email)},e.prototype.getEmailHTML=function(){return this.isValid?this.stringToHTML(this.validEmail):this.stringToHTML(this.invalidEmail)},e.prototype.render=function(e){var t=e.lastElementChild,n=this.getEmailHTML();return e.insertBefore(n.childNodes[0],t),e},e}();t.default=n},801:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Email=void 0;var i=n(268);Object.defineProperty(t,"Email",{enumerable:!0,get:function(){return a(i).default}})},607:(e,t,n)=>{var a,i,r,l,s=n(928);a=document.getElementById("emailsContainer"),i=document.getElementById("emailsInput"),r=document.getElementById("addEmail"),l=document.getElementById("getEmails"),i.addEventListener("keyup",(function(e){this.value.length<3||("Enter"!==e.key&&","!==e.key||(s.insertEmails(this.value,a),this.value=""),i.focus())})),i.addEventListener("focusout",(function(e){this.value.length<3||(s.insertEmails(this.value,a),this.value="")})),l.addEventListener("click",(function(e){var t=s.getValidEmails(a);t>1?alert("You have "+t+" valid emails"):alert("You have "+t+" valid email"),i.focus()})),r.addEventListener("click",(function(e){var t=s.generateFakeEmail();s.insertEmails(t,a),i.focus()})),a.addEventListener("click",(function(e){i.focus()}))},256:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){for(var e="abcdefghijklmno",t="",n=0;n<6;n++)t+=e.charAt(Math.round(e.length*Math.random()));t+="@";for(var a=0;a<4;a++)t+=e.charAt(Math.round(e.length*Math.random()));return t+".com"}},572:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.getElementsByClassName("email").length}},928:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.insertEmails=t.generateFakeEmail=t.getValidEmails=void 0;var i=n(572);Object.defineProperty(t,"getValidEmails",{enumerable:!0,get:function(){return a(i).default}});var r=n(256);Object.defineProperty(t,"generateFakeEmail",{enumerable:!0,get:function(){return a(r).default}});var l=n(146);Object.defineProperty(t,"insertEmails",{enumerable:!0,get:function(){return a(l).default}})},146:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});var a=n(801);t.default=function(e,t){e.trim().split(",").filter((function(e){return e})).forEach((function(e){new a.Email(e.trim()).render(t)}))}}},t={};!function n(a){if(t[a])return t[a].exports;var i=t[a]={exports:{}};return e[a].call(i.exports,i,i.exports,n),i.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,